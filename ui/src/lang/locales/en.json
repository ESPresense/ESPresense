{
  "sidebar": {
    "network": "Network",
    "settings": "Settings",
    "devices": "Devices",
    "fingerprints": "Fingerprints"
  },
  "network": {
    "room_configuration": "Room Configuration",
    "room_name": "Room Name",
    "wifi_configuration": "WiFi Configuration",
    "wifi_ssid": "WiFi SSID",
    "available_networks": "Available Networks",
    "wifi_password": "WiFi Password",
    "seconds_to_wait_for_wifi": "Seconds to wait for WiFi before captive portal (-1 = forever)",
    "seconds_to_wait_for_cp": "Seconds to wait in captive portal before rebooting",
    "ethernet_type": "Ethernet Type",
    "none": "None",
    "mqtt_configuration": "MQTT Configuration",
    "server": "Server",
    "port": "Port",
    "username": "Username",
    "password": "Password",
    "send_to_discovery_topic": "Send to discovery topic",
    "ha_discovery_topic_prefix": "Home Assistant discovery topic prefix",
    "send_to_telemetry_topic": "Send to telemetry topic",
    "send_to_devices_topic": "Send to devices topic",
    "updating": "Updating",
    "automatically_update": "Automatically update",
    "include_pre_released": "Include pre-released versions in auto-update",
    "arduino_ota_update": "Arduino OTA Update",
    "update_url": "Update URL (if set will update from this url on next boot)",
    "saving": "Saving...",
    "save": "Save"
  },
  "settings": {
    "locale_language": "Locale Language:",
    "scanning": "Scanning",
    "known_ble_mac_addresses": "Known BLE mac addresses (no colons, space seperated):",
    "known_ble_identity_keys": "Known BLE identity resolving keys, should be 32 hex chars space seperated:",
    "forget_beacon_if_not_seen": "Forget beacon if not seen for (in milliseconds):",
    "querying": "Querying",
    "query_device_ids_for_char": "Query device ids for characteristics (eg. flora:):",
    "requery_interval": "Requery interval in seconds:",
    "counting": "Counting",
    "include_id_prefixes": "Include id prefixes (space seperated):",
    "start_counting_devices": "Start counting devices less than distance (in meters):",
    "stop_counting_devices": "Stop counting devices greater than distance (in meters):",
    "include_devices_with_age": "Include devices with age less than (in ms):",
    "filtering": "Filtering",
    "include_only_sending_ids": "Include only sending these ids to mqtt (eg. apple:iphone10-6 apple:iphone13-2):",
    "exclude_sending_ids": "Exclude sending these ids to mqtt (eg. exp:20 apple:iphone10-6):",
    "maximum_distance_to_report": "Maximum distance to report (in meters):",
    "report_early_if_beacon_moved": "Report early if beacon has moved more than this distance (in meters):",
    "skip_reporting_if_message_age": "Skip reporting if message age is less that this (in milliseconds):",
    "calibration": "Calibration",
    "rssi_expected_from_0dbm": "Rssi expected from a 0dBm transmitter at 1 meter (NOT used for iBeacons or Eddystone):",
    "rssi_adjustmemt_for_receiver": "Rssi adjustment for receiver (use only if you know this device has a weak antenna):",
    "factor_used_to_account": "Factor used to account for absorption, reflection, or diffraction:",
    "rssi_expected_from_tx": "Rssi expected from this tx power at 1m (used for node iBeacon):",
    "leds": "LEDs",
    "led_type": "LED Type:",
    "pin": "Pin (-1 to disable):",
    "count": "Count (only applies to Addressable LEDs):",
    "led_control": "LED Control:",
    "gpio_sensors": "GPIO Sensors",
    "pir": "PIR:",
    "pir_motion_pin_type": "PIR motion pin type:",
    "pir_motion_pin": "PIR motion pin (-1 for disable):",
    "pir_motion_timeout": "PIR motion timeout (in seconds):",
    "radar": "Radar:",
    "radar_motion_pin_type": "Radar motion pin type:",
    "radar_motion_pin": "Radar motion pin (-1 for disable):",
    "radar_motion_timeout": "Radar motion timeout (in seconds):",
    "switch_one": "Switch One:",
    "switch_one_pin_type": "Switch One pin type:",
    "switch_one_pin": "Switch One pin (-1 for disable):",
    "switch_one_timeout": "Switch One timeout (in seconds):",
    "switch_two": "Switch Two:",
    "switch_two_pin_type": "Switch Two pin type:",
    "switch_two_pin": "Switch Two pin (-1 for disable):",
    "switch_two_timeout": "Switch Two timeout (in seconds):",
    "button_one": "Button One:",
    "button_one_pin_type": "Button One pin type:",
    "button_one_pin": "Button One pin (-1 for disable):",
    "button_one_timeout": "Button One timeout (in seconds):",
    "button_two": "Button Two:",
    "button_two_pin_type": "Button Two pin type:",
    "button_two_pin": "Button Two pin (-1 for disable):",
    "button_two_timeout": "Button Two timeout (in seconds):",
    "dht11_sensor_pin": "DHT11 sensor pin (-1 for disable):",
    "dht22_sensor_pin": "DHT22 sensor pin (-1 for disable):",
    "dht_temperature_offset": "DHT temperature offset:",
    "i2c_settings": "I2C Settings",
    "sda_pin": "SDA pin (-1 to disable):",
    "scl_pin": "SCL pin (-1 to disable):",
    "debug_i2c_addresses": "Debug I2C addreses. Look at the serial log to get the correct address (default: \u2610)",
    "i2c_sensors": "I2C Sensors",
    "i2c_bus": "I2C Bus:",
    "ahtx0_sensor": "AHTX0 - Temperature + Humidity Sensor:",
    "i2c_address_38_or_39": "I2C address (0x38 or 0x39):",
    "bh1750_sensor": "BH1750 - Ambient Light Sensor:",
    "i2c_address_23_or_5c": "I2C address (0x23 or 0x5C):",
    "bme280_sensor": "BME280 - Humidity + Temp + Pressure Sensor:",
    "i2c_address_76_or_77": "I2C address (0x76 or 0x77):",
    "bmp085_bmp180_sensor": "BMP085/BMP180 - Barometric Pressure + Temperature:",
    "i2c_address_77": "I2C address (0x77):",
    "bmp280_sensor": "BMP280 - Barometric Pressure + Temperature Sensor:",
    "i2c_bus_setting": "I2C Bus (-1 to disable):",
    "sht_sensor": "SHTC1/3, SHTW1/2, SHT3x/4x, SHT85 - Temperature and Humidity Sensor:",
    "tsl2561_sensor": "TSL2561 - Ambient Light Sensor:",
    "i2c_address_39_48_or_29": "I2C address (0x39, 0x49 or 0x29):",
    "gain": "Gain (auto, 1x or 16x):",
    "sgp30_sensor": "SGP30 - Air Quality Sensor:",
    "i2c_address_58": "I2C address (0x58):",
    "hx711_sensor": "HX711 - Weight Sensor:",
    "hx711_sck": "HX711 SCK (Clock) pin:",
    "hx711_dout": "HX711 DOUT (Data) pin:",
    "ds18b20_sensor": "DS18B20:",
    "ds18b20_sensor_pin": "DS18B20 sensor pin (-1 for disable):",
    "ds18b20_temperature_offset": "DS18B20 temperature offset:",
    "saving": "Saving...",
    "save": "Save",
    "pulse_counter": "Pulse Counter:",
    "pulse_counter_pin": "Pulse Counter pin (-1 for disable):",
    "pulse_width_sensor": "Pulse Width Sensor:",
    "pulse_width_sensor_pin": "Pulse Width Sensor pin (-1 for disable):"
  },
  "devices": {
    "devices": "Devices",
    "enroll": "Enroll",
    "enroll_device": "Enroll Device",
    "are_you_sure_delete_device": "Are you sure you want to delete the device",
    "ok": "Ok",
    "alias_upper": "ALIAS",
    "id": "ID",
    "name_upper": "NAME",
    "alias": "Alias",
    "name": "Name",
    "edit_device": "Edit Device",
    "delete": "Delete",
    "save": "Save",
    "cancel": "Cancel",
    "rssi_at_1m": "RSSI at 1m (dBm)",
    "loading_configured_devices": "Loading configured devices...",
    "please_wait_while_fetch": "Please wait while we fetch the data.",
    "the_device_has_enrolled": "The device has been enrolled. ESPresense has disconnected; you can delete the pairing on your device. The new device ID is:",
    "select_device_type": "Select device type",
    "enter_name": "Enter name",
    "enter_custom_id": "Enter custom ID or leave empty for auto-generated",
    "close": "Close",
    "leave_empty_to_use_auto_id": "Leave empty to use auto-generated ID",
    "to_begin_navigate_bt_settings": "To begin, navigate to your device's Bluetooth settings (on Apple Watch use the BluetoothLE app) and pair with the ESPresense device.",
    "start_pairing": "Start the pairing process now. Time remaining:"
  },
  "fingerprints": {
    "fingerprints": "Fingerprints",
    "loading_fingerprints": "Loading fingerprints...",
    "please_wait_while_fetch": "Please wait while we fetch the data.",
    "visible": "Visible",
    "dist": "Dist",
    "var": "Var",
    "id": "ID",
    "name": "Name",
    "int": "int",
    "yes": "Yes",
    "no": "No"
  }
}