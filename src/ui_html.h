/*
 * Binary arrays for the Web UI ui_html files.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// devices.html
const uint16_t DEVICES_HTML_L = 648;
const uint8_t DEVICES_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xa5, 0x94, 0xd5, 0x96, 0xdb, 0x3c,
  0x10, 0xc7, 0xaf, 0xb3, 0x4f, 0x31, 0xab, 0x0f, 0x62, 0x9f, 0x13, 0xdb, 0x65, 0x8c, 0xb7, 0xdc,
  0x9b, 0x32, 0x33, 0x28, 0xd6, 0x24, 0x56, 0x23, 0xf0, 0x91, 0x94, 0x64, 0xf1, 0xdd, 0x3b, 0xb2,
  0x03, 0x65, 0xbc, 0x11, 0xcf, 0x6f, 0xe8, 0x6f, 0x0f, 0xb7, 0x85, 0xad, 0xc2, 0x5e, 0x83, 0x50,
  0x07, 0xad, 0x76, 0xb6, 0x86, 0x71, 0x02, 0xc5, 0xcd, 0xa4, 0x64, 0x68, 0xd8, 0xce, 0x56, 0x6f,
  0x58, 0x23, 0x17, 0x34, 0xf7, 0x86, 0x1a, 0x03, 0x87, 0xaa, 0xe6, 0xce, 0x63, 0x28, 0xd9, 0x2c,
  0x8c, 0xb3, 0x73, 0x0c, 0x8a, 0xf6, 0x4a, 0x49, 0x33, 0x05, 0x87, 0xaa, 0x64, 0xb2, 0xb2, 0x86,
  0x41, 0xed, 0x70, 0x5c, 0xb2, 0xbc, 0x18, 0xf3, 0x79, 0x3c, 0xc8, 0xfd, 0x7c, 0xb2, 0x7a, 0xda,
  0x52, 0x0c, 0xd7, 0x58, 0xb2, 0xb9, 0xc4, 0x45, 0x63, 0x5d, 0x60, 0x40, 0x6f, 0x02, 0x1a, 0xa2,
  0x2e, 0xa4, 0x08, 0x75, 0x29, 0x90, 0xcc, 0x30, 0x6b, 0x37, 0x03, 0x90, 0x46, 0x06, 0xc9, 0x55,
  0xe6, 0x2b, 0xae, 0xb0, 0x3c, 0xbe, 0x02, 0xf9, 0xca, 0xc9, 0x26, 0xc4, 0x65, 0xaf, 0x28, 0xe0,
  0x9e, 0x81, 0x86, 0x4f, 0x10, 0x94, 0xe5, 0x02, 0xac, 0x83, 0x45, 0x8d, 0x26, 0x06, 0x6b, 0x26,
  0xd2, 0x4c, 0x20, 0xd4, 0xa8, 0xd1, 0x0f, 0x60, 0x84, 0x3e, 0x40, 0xb0, 0xc0, 0x85, 0x20, 0x2c,
  0x45, 0x8d, 0x34, 0xc1, 0xfb, 0x98, 0xe2, 0xfb, 0xf6, 0x7c, 0x6e, 0xa5, 0x80, 0x9b, 0xf7, 0x9e,
  0x5c, 0x8b, 0x58, 0x39, 0x86, 0x44, 0x59, 0xf2, 0xfa, 0x28, 0x58, 0x47, 0xf0, 0xbc, 0xc5, 0x40,
  0x59, 0x96, 0xd0, 0x17, 0xdc, 0x4d, 0xfb, 0x70, 0x78, 0x08, 0xc9, 0x76, 0xd2, 0x6f, 0xcf, 0xfb,
  0x11, 0xf5, 0xe9, 0xf3, 0x14, 0xfe, 0xff, 0x1f, 0x16, 0xd2, 0x08, 0xbb, 0xc8, 0x35, 0x0f, 0x55,
  0x7d, 0x07, 0x85, 0xe4, 0x49, 0x3f, 0x69, 0xa8, 0x3a, 0xe8, 0x7c, 0x56, 0x59, 0x65, 0x1d, 0xa5,
  0x15, 0xad, 0x2f, 0x40, 0x24, 0xa6, 0xfd, 0xb4, 0x7b, 0x8a, 0x3e, 0x4d, 0xe1, 0x20, 0x06, 0xd1,
  0xa3, 0x06, 0xcd, 0x34, 0x9a, 0x90, 0xaf, 0x16, 0x37, 0x14, 0xb6, 0xfb, 0x4a, 0x71, 0xef, 0x6f,
  0x4b, 0x1f, 0x72, 0x4a, 0x27, 0xe9, 0x22, 0x4a, 0x2f, 0x46, 0x9b, 0x23, 0x40, 0xe5, 0xf1, 0xd7,
  0xed, 0x1d, 0x6a, 0x3b, 0xc7, 0xcf, 0x11, 0xb1, 0xc4, 0xc5, 0xa6, 0xc6, 0xeb, 0x2e, 0xaf, 0x5a,
  0xcb, 0x9b, 0xa6, 0x90, 0x5a, 0xcf, 0x02, 0x1f, 0x29, 0x2c, 0x88, 0x84, 0xc1, 0x17, 0x3e, 0x70,
  0x17, 0xf2, 0xab, 0xe3, 0xe9, 0x83, 0xbb, 0xf7, 0x1f, 0x9f, 0xc8, 0x2b, 0xef, 0x59, 0x27, 0x0b,
  0x1f, 0xf6, 0x14, 0xfa, 0x1a, 0x31, 0xb0, 0x2f, 0x04, 0xa3, 0xad, 0x98, 0x29, 0xa4, 0x92, 0xc4,
  0xce, 0xb1, 0xef, 0xe0, 0x29, 0x5c, 0xb7, 0xb7, 0xa2, 0x3f, 0xe7, 0x2f, 0x6a, 0xad, 0x5f, 0xe6,
  0x1f, 0xfc, 0x5f, 0xb0, 0xe8, 0x2c, 0x3f, 0xff, 0x8c, 0x5f, 0x3f, 0xa6, 0x79, 0xd6, 0x91, 0x28,
  0xdd, 0xa5, 0xd4, 0x87, 0x23, 0x2b, 0xf6, 0x40, 0xf0, 0xc0, 0x33, 0x3f, 0x47, 0x15, 0x70, 0x2a,
  0x43, 0xb6, 0xa4, 0x66, 0xf1, 0xb8, 0x64, 0x35, 0xd5, 0xcb, 0x75, 0xee, 0x85, 0x9c, 0x43, 0x9b,
  0x5e, 0xc9, 0x84, 0xf4, 0x8d, 0xe2, 0x7b, 0x17, 0x56, 0x7a, 0x6e, 0xb1, 0x9f, 0x4b, 0xb5, 0xd7,
  0x35, 0xa5, 0xf7, 0xee, 0xdd, 0x1a, 0xfd, 0xee, 0xd4, 0xe9, 0x1a, 0x4a, 0x58, 0x5e, 0xf4, 0x46,
  0xdc, 0x93, 0x1a, 0x0c, 0x2e, 0xe0, 0xc9, 0xc3, 0xdb, 0x09, 0xcb, 0xd9, 0xa0, 0x55, 0x55, 0x90,
  0xd6, 0xa4, 0x79, 0xc3, 0x43, 0x1d, 0x3f, 0x9e, 0xdc, 0x2b, 0x59, 0x61, 0x72, 0x6c, 0x00, 0xd9,
  0xf1, 0xb4, 0x33, 0x3c, 0xba, 0xb8, 0xd5, 0x2d, 0xc8, 0xb9, 0x0f, 0x80, 0x5d, 0x97, 0x09, 0xbc,
  0x16, 0x40, 0x35, 0x73, 0x8e, 0xe6, 0x47, 0x6d, 0x34, 0x84, 0x72, 0x1b, 0x31, 0xac, 0x6c, 0xef,
  0x3b, 0xab, 0xa5, 0xc7, 0x9c, 0x2b, 0x95, 0xbc, 0x5a, 0x06, 0x24, 0x75, 0xfc, 0x48, 0x93, 0x5f,
  0x6e, 0x4a, 0x3a, 0xf8, 0xdc, 0xf0, 0x17, 0x3b, 0xb0, 0x4c, 0xe3, 0x4d, 0x1a, 0x3f, 0x33, 0x93,
  0x24, 0xaf, 0xa8, 0x34, 0x03, 0xa0, 0x57, 0x6f, 0x52, 0x28, 0x77, 0xd6, 0xe5, 0xa1, 0xd3, 0xbc,
  0xf5, 0x99, 0xd0, 0xd5, 0x60, 0x95, 0x66, 0x27, 0x5a, 0x2a, 0x42, 0x5c, 0x74, 0xf2, 0xfd, 0x4c,
  0xbf, 0xb4, 0xa6, 0x3e, 0xb5, 0x4d, 0x8e, 0xcd, 0xa5, 0x1f, 0x5d, 0xd1, 0xfd, 0xf0, 0x3e, 0x02,
  0x18, 0x97, 0xd8, 0xd0, 0x01, 0x05, 0x00, 0x00
};

inline void serveDevicesHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", DEVICES_HTML, DEVICES_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// fingerprints.html
const uint16_t FINGERPRINTS_HTML_L = 648;
const uint8_t FINGERPRINTS_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xa5, 0x94, 0xd5, 0x96, 0xdb, 0x3c,
  0x10, 0xc7, 0xaf, 0xb3, 0x4f, 0x31, 0xab, 0x0f, 0x62, 0x9f, 0x13, 0xdb, 0x65, 0x8c, 0xb7, 0xdc,
  0x9b, 0x32, 0x33, 0x28, 0xd6, 0x24, 0x56, 0x23, 0xf0, 0x91, 0x94, 0x64, 0xf1, 0xdd, 0x3b, 0xb2,
  0x03, 0x65, 0xbc, 0x11, 0xcf, 0x6f, 0xe8, 0x6f, 0x0f, 0xb7, 0x85, 0xad, 0xc2, 0x5e, 0x83, 0x50,
  0x07, 0xad, 0x76, 0xb6, 0x86, 0x71, 0x02, 0xc5, 0xcd, 0xa4, 0x64, 0x68, 0xd8, 0xce, 0x56, 0x6f,
  0x58, 0x23, 0x17, 0x34, 0xf7, 0x86, 0x1a, 0x03, 0x87, 0xaa, 0xe6, 0xce, 0x63, 0x28, 0xd9, 0x2c,
  0x8c, 0xb3, 0x73, 0x0c, 0x8a, 0xf6, 0x4a, 0x49, 0x33, 0x05, 0x87, 0xaa, 0x64, 0xb2, 0xb2, 0x86,
  0x41, 0xed, 0x70, 0x5c, 0xb2, 0xbc, 0x18, 0xf3, 0x79, 0x3c, 0xc8, 0xfd, 0x7c, 0xb2, 0x7a, 0xda,
  0x52, 0x0c, 0xd7, 0x58, 0xb2, 0xb9, 0xc4, 0x45, 0x63, 0x5d, 0x60, 0x40, 0x6f, 0x02, 0x1a, 0xa2,
  0x2e, 0xa4, 0x08, 0x75, 0x29, 0x90, 0xcc, 0x30, 0x6b, 0x37, 0x03, 0x90, 0x46, 0x06, 0xc9, 0x55,
  0xe6, 0x2b, 0xae, 0xb0, 0x3c, 0xbe, 0x02, 0xf9, 0xca, 0xc9, 0x26, 0xc4, 0x65, 0xaf, 0x28, 0xe0,
  0x9e, 0x81, 0x86, 0x4f, 0x10, 0x94, 0xe5, 0x02, 0xac, 0x83, 0x45, 0x8d, 0x26, 0x06, 0x6b, 0x26,
  0xd2, 0x4c, 0x20, 0xd4, 0xa8, 0xd1, 0x0f, 0x60, 0x84, 0x3e, 0x40, 0xb0, 0xc0, 0x85, 0x20, 0x2c,
  0x45, 0x8d, 0x34, 0xc1, 0xfb, 0x98, 0xe2, 0xfb, 0xf6, 0x7c, 0x6e, 0xa5, 0x80, 0x9b, 0xf7, 0x9e,
  0x5c, 0x8b, 0x58, 0x39, 0x86, 0x44, 0x59, 0xf2, 0xfa, 0x28, 0x58, 0x47, 0xf0, 0xbc, 0xc5, 0x40,
  0x59, 0x96, 0xd0, 0x17, 0xdc, 0x4d, 0xfb, 0x70, 0x78, 0x08, 0xc9, 0x76, 0xd2, 0x6f, 0xcf, 0xfb,
  0x11, 0xf5, 0xe9, 0xf3, 0x14, 0xfe, 0xff, 0x1f, 0x16, 0xd2, 0x08, 0xbb, 0xc8, 0x35, 0x0f, 0x55,
  0x7d, 0x07, 0x85, 0xe4, 0x49, 0x3f, 0x69, 0xa8, 0x3a, 0xe8, 0x7c, 0x56, 0x59, 0x65, 0x1d, 0xa5,
  0x15, 0xad, 0x2f, 0x40, 0x24, 0xa6, 0xfd, 0xb4, 0x7b, 0x8a, 0x3e, 0x4d, 0xe1, 0x20, 0x06, 0xd1,
  0xa3, 0x06, 0xcd, 0x34, 0x9a, 0x90, 0xaf, 0x16, 0x37, 0x14, 0xb6, 0xfb, 0x4a, 0x71, 0xef, 0x6f,
  0x4b, 0x1f, 0x72, 0x4a, 0x27, 0xe9, 0x22, 0x4a, 0x2f, 0x46, 0x9b, 0x23, 0x40, 0xe5, 0xf1, 0xd7,
  0xed, 0x1d, 0x6a, 0x3b, 0xc7, 0xcf, 0x11, 0xb1, 0xc4, 0xc5, 0xa6, 0xc6, 0xeb, 0x2e, 0xaf, 0x5a,
  0xcb, 0x9b, 0xa6, 0x90, 0x5a, 0xcf, 0x02, 0x1f, 0x29, 0x2c, 0x88, 0x84, 0xc1, 0x17, 0x3e, 0x70,
  0x17, 0xf2, 0xab, 0xe3, 0xe9, 0x83, 0xbb, 0xf7, 0x1f, 0x9f, 0xc8, 0x2b, 0xef, 0x59, 0x27, 0x0b,
  0x1f, 0xf6, 0x14, 0xfa, 0x1a, 0x31, 0xb0, 0x2f, 0x04, 0xa3, 0xad, 0x98, 0x29, 0xa4, 0x92, 0xc4,
  0xce, 0xb1, 0xef, 0xe0, 0x29, 0x5c, 0xb7, 0xb7, 0xa2, 0x3f, 0xe7, 0x2f, 0x6a, 0xad, 0x5f, 0xe6,
  0x1f, 0xfc, 0x5f, 0xb0, 0xe8, 0x2c, 0x3f, 0xff, 0x8c, 0x5f, 0x3f, 0xa6, 0x79, 0xd6, 0x91, 0x28,
  0xdd, 0xa5, 0xd4, 0x87, 0x23, 0x2b, 0xf6, 0x40, 0xf0, 0xc0, 0x33, 0x3f, 0x47, 0x15, 0x70, 0x2a,
  0x43, 0xb6, 0xa4, 0x66, 0xf1, 0xb8, 0x64, 0x35, 0xd5, 0xcb, 0x75, 0xee, 0x85, 0x9c, 0x43, 0x9b,
  0x5e, 0xc9, 0x84, 0xf4, 0x8d, 0xe2, 0x7b, 0x17, 0x56, 0x7a, 0x6e, 0xb1, 0x9f, 0x4b, 0xb5, 0xd7,
  0x35, 0xa5, 0xf7, 0xee, 0xdd, 0x1a, 0xfd, 0xee, 0xd4, 0xe9, 0x1a, 0x4a, 0x58, 0x5e, 0xf4, 0x46,
  0xdc, 0x93, 0x1a, 0x0c, 0x2e, 0xe0, 0xc9, 0xc3, 0xdb, 0x09, 0xcb, 0xd9, 0xa0, 0x55, 0x55, 0x90,
  0xd6, 0xa4, 0x79, 0xc3, 0x43, 0x1d, 0x3f, 0x9e, 0xdc, 0x2b, 0x59, 0x61, 0x72, 0x6c, 0x00, 0xd9,
  0xf1, 0xb4, 0x33, 0x3c, 0xba, 0xb8, 0xd5, 0x2d, 0xc8, 0xb9, 0x0f, 0x80, 0x5d, 0x97, 0x09, 0xbc,
  0x16, 0x40, 0x35, 0x73, 0x8e, 0xe6, 0x47, 0x6d, 0x34, 0x84, 0x72, 0x1b, 0x31, 0xac, 0x6c, 0xef,
  0x3b, 0xab, 0xa5, 0xc7, 0x9c, 0x2b, 0x95, 0xbc, 0x5a, 0x06, 0x24, 0x75, 0xfc, 0x48, 0x93, 0x5f,
  0x6e, 0x4a, 0x3a, 0xf8, 0xdc, 0xf0, 0x17, 0x3b, 0xb0, 0x4c, 0xe3, 0x4d, 0x1a, 0x3f, 0x33, 0x93,
  0x24, 0xaf, 0xa8, 0x34, 0x03, 0xa0, 0x57, 0x6f, 0x52, 0x28, 0x77, 0xd6, 0xe5, 0xa1, 0xd3, 0xbc,
  0xf5, 0x99, 0xd0, 0xd5, 0x60, 0x95, 0x66, 0x27, 0x5a, 0x2a, 0x42, 0x5c, 0x74, 0xf2, 0xfd, 0x4c,
  0xbf, 0xb4, 0xa6, 0x3e, 0xb5, 0x4d, 0x8e, 0xcd, 0xa5, 0x1f, 0x5d, 0xd1, 0xfd, 0xf0, 0x3e, 0x02,
  0x18, 0x97, 0xd8, 0xd0, 0x01, 0x05, 0x00, 0x00
};

inline void serveFingerprintsHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", FINGERPRINTS_HTML, FINGERPRINTS_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// index.html
const uint16_t INDEX_HTML_L = 648;
const uint8_t INDEX_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xa5, 0x94, 0xd5, 0x96, 0xdb, 0x3c,
  0x10, 0xc7, 0xaf, 0xb3, 0x4f, 0x31, 0xab, 0x0f, 0x62, 0x9f, 0x13, 0xdb, 0x65, 0x8c, 0xb7, 0xdc,
  0x9b, 0x32, 0x33, 0x28, 0xd6, 0x24, 0x56, 0x23, 0xf0, 0x91, 0x94, 0x64, 0xf1, 0xdd, 0x3b, 0xb2,
  0x03, 0x65, 0xbc, 0x11, 0xcf, 0x6f, 0xe8, 0x6f, 0x0f, 0xb7, 0x85, 0xad, 0xc2, 0x5e, 0x83, 0x50,
  0x07, 0xad, 0x76, 0xb6, 0x86, 0x71, 0x02, 0xc5, 0xcd, 0xa4, 0x64, 0x68, 0xd8, 0xce, 0x56, 0x6f,
  0x58, 0x23, 0x17, 0x34, 0xf7, 0x86, 0x1a, 0x03, 0x87, 0xaa, 0xe6, 0xce, 0x63, 0x28, 0xd9, 0x2c,
  0x8c, 0xb3, 0x73, 0x0c, 0x8a, 0xf6, 0x4a, 0x49, 0x33, 0x05, 0x87, 0xaa, 0x64, 0xb2, 0xb2, 0x86,
  0x41, 0xed, 0x70, 0x5c, 0xb2, 0xbc, 0x18, 0xf3, 0x79, 0x3c, 0xc8, 0xfd, 0x7c, 0xb2, 0x7a, 0xda,
  0x52, 0x0c, 0xd7, 0x58, 0xb2, 0xb9, 0xc4, 0x45, 0x63, 0x5d, 0x60, 0x40, 0x6f, 0x02, 0x1a, 0xa2,
  0x2e, 0xa4, 0x08, 0x75, 0x29, 0x90, 0xcc, 0x30, 0x6b, 0x37, 0x03, 0x90, 0x46, 0x06, 0xc9, 0x55,
  0xe6, 0x2b, 0xae, 0xb0, 0x3c, 0xbe, 0x02, 0xf9, 0xca, 0xc9, 0x26, 0xc4, 0x65, 0xaf, 0x28, 0xe0,
  0x9e, 0x81, 0x86, 0x4f, 0x10, 0x94, 0xe5, 0x02, 0xac, 0x83, 0x45, 0x8d, 0x26, 0x06, 0x6b, 0x26,
  0xd2, 0x4c, 0x20, 0xd4, 0xa8, 0xd1, 0x0f, 0x60, 0x84, 0x3e, 0x40, 0xb0, 0xc0, 0x85, 0x20, 0x2c,
  0x45, 0x8d, 0x34, 0xc1, 0xfb, 0x98, 0xe2, 0xfb, 0xf6, 0x7c, 0x6e, 0xa5, 0x80, 0x9b, 0xf7, 0x9e,
  0x5c, 0x8b, 0x58, 0x39, 0x86, 0x44, 0x59, 0xf2, 0xfa, 0x28, 0x58, 0x47, 0xf0, 0xbc, 0xc5, 0x40,
  0x59, 0x96, 0xd0, 0x17, 0xdc, 0x4d, 0xfb, 0x70, 0x78, 0x08, 0xc9, 0x76, 0xd2, 0x6f, 0xcf, 0xfb,
  0x11, 0xf5, 0xe9, 0xf3, 0x14, 0xfe, 0xff, 0x1f, 0x16, 0xd2, 0x08, 0xbb, 0xc8, 0x35, 0x0f, 0x55,
  0x7d, 0x07, 0x85, 0xe4, 0x49, 0x3f, 0x69, 0xa8, 0x3a, 0xe8, 0x7c, 0x56, 0x59, 0x65, 0x1d, 0xa5,
  0x15, 0xad, 0x2f, 0x40, 0x24, 0xa6, 0xfd, 0xb4, 0x7b, 0x8a, 0x3e, 0x4d, 0xe1, 0x20, 0x06, 0xd1,
  0xa3, 0x06, 0xcd, 0x34, 0x9a, 0x90, 0xaf, 0x16, 0x37, 0x14, 0xb6, 0xfb, 0x4a, 0x71, 0xef, 0x6f,
  0x4b, 0x1f, 0x72, 0x4a, 0x27, 0xe9, 0x22, 0x4a, 0x2f, 0x46, 0x9b, 0x23, 0x40, 0xe5, 0xf1, 0xd7,
  0xed, 0x1d, 0x6a, 0x3b, 0xc7, 0xcf, 0x11, 0xb1, 0xc4, 0xc5, 0xa6, 0xc6, 0xeb, 0x2e, 0xaf, 0x5a,
  0xcb, 0x9b, 0xa6, 0x90, 0x5a, 0xcf, 0x02, 0x1f, 0x29, 0x2c, 0x88, 0x84, 0xc1, 0x17, 0x3e, 0x70,
  0x17, 0xf2, 0xab, 0xe3, 0xe9, 0x83, 0xbb, 0xf7, 0x1f, 0x9f, 0xc8, 0x2b, 0xef, 0x59, 0x27, 0x0b,
  0x1f, 0xf6, 0x14, 0xfa, 0x1a, 0x31, 0xb0, 0x2f, 0x04, 0xa3, 0xad, 0x98, 0x29, 0xa4, 0x92, 0xc4,
  0xce, 0xb1, 0xef, 0xe0, 0x29, 0x5c, 0xb7, 0xb7, 0xa2, 0x3f, 0xe7, 0x2f, 0x6a, 0xad, 0x5f, 0xe6,
  0x1f, 0xfc, 0x5f, 0xb0, 0xe8, 0x2c, 0x3f, 0xff, 0x8c, 0x5f, 0x3f, 0xa6, 0x79, 0xd6, 0x91, 0x28,
  0xdd, 0xa5, 0xd4, 0x87, 0x23, 0x2b, 0xf6, 0x40, 0xf0, 0xc0, 0x33, 0x3f, 0x47, 0x15, 0x70, 0x2a,
  0x43, 0xb6, 0xa4, 0x66, 0xf1, 0xb8, 0x64, 0x35, 0xd5, 0xcb, 0x75, 0xee, 0x85, 0x9c, 0x43, 0x9b,
  0x5e, 0xc9, 0x84, 0xf4, 0x8d, 0xe2, 0x7b, 0x17, 0x56, 0x7a, 0x6e, 0xb1, 0x9f, 0x4b, 0xb5, 0xd7,
  0x35, 0xa5, 0xf7, 0xee, 0xdd, 0x1a, 0xfd, 0xee, 0xd4, 0xe9, 0x1a, 0x4a, 0x58, 0x5e, 0xf4, 0x46,
  0xdc, 0x93, 0x1a, 0x0c, 0x2e, 0xe0, 0xc9, 0xc3, 0xdb, 0x09, 0xcb, 0xd9, 0xa0, 0x55, 0x55, 0x90,
  0xd6, 0xa4, 0x79, 0xc3, 0x43, 0x1d, 0x3f, 0x9e, 0xdc, 0x2b, 0x59, 0x61, 0x72, 0x6c, 0x00, 0xd9,
  0xf1, 0xb4, 0x33, 0x3c, 0xba, 0xb8, 0xd5, 0x2d, 0xc8, 0xb9, 0x0f, 0x80, 0x5d, 0x97, 0x09, 0xbc,
  0x16, 0x40, 0x35, 0x73, 0x8e, 0xe6, 0x47, 0x6d, 0x34, 0x84, 0x72, 0x1b, 0x31, 0xac, 0x6c, 0xef,
  0x3b, 0xab, 0xa5, 0xc7, 0x9c, 0x2b, 0x95, 0xbc, 0x5a, 0x06, 0x24, 0x75, 0xfc, 0x48, 0x93, 0x5f,
  0x6e, 0x4a, 0x3a, 0xf8, 0xdc, 0xf0, 0x17, 0x3b, 0xb0, 0x4c, 0xe3, 0x4d, 0x1a, 0x3f, 0x33, 0x93,
  0x24, 0xaf, 0xa8, 0x34, 0x03, 0xa0, 0x57, 0x6f, 0x52, 0x28, 0x77, 0xd6, 0xe5, 0xa1, 0xd3, 0xbc,
  0xf5, 0x99, 0xd0, 0xd5, 0x60, 0x95, 0x66, 0x27, 0x5a, 0x2a, 0x42, 0x5c, 0x74, 0xf2, 0xfd, 0x4c,
  0xbf, 0xb4, 0xa6, 0x3e, 0xb5, 0x4d, 0x8e, 0xcd, 0xa5, 0x1f, 0x5d, 0xd1, 0xfd, 0xf0, 0x3e, 0x02,
  0x18, 0x97, 0xd8, 0xd0, 0x01, 0x05, 0x00, 0x00
};

inline void serveIndexHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", INDEX_HTML, INDEX_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// network.html
const uint16_t NETWORK_HTML_L = 648;
const uint8_t NETWORK_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xa5, 0x94, 0xd5, 0x96, 0xdb, 0x3c,
  0x10, 0xc7, 0xaf, 0xb3, 0x4f, 0x31, 0xab, 0x0f, 0x62, 0x9f, 0x13, 0xdb, 0x65, 0x8c, 0xb7, 0xdc,
  0x9b, 0x32, 0x33, 0x28, 0xd6, 0x24, 0x56, 0x23, 0xf0, 0x91, 0x94, 0x64, 0xf1, 0xdd, 0x3b, 0xb2,
  0x03, 0x65, 0xbc, 0x11, 0xcf, 0x6f, 0xe8, 0x6f, 0x0f, 0xb7, 0x85, 0xad, 0xc2, 0x5e, 0x83, 0x50,
  0x07, 0xad, 0x76, 0xb6, 0x86, 0x71, 0x02, 0xc5, 0xcd, 0xa4, 0x64, 0x68, 0xd8, 0xce, 0x56, 0x6f,
  0x58, 0x23, 0x17, 0x34, 0xf7, 0x86, 0x1a, 0x03, 0x87, 0xaa, 0xe6, 0xce, 0x63, 0x28, 0xd9, 0x2c,
  0x8c, 0xb3, 0x73, 0x0c, 0x8a, 0xf6, 0x4a, 0x49, 0x33, 0x05, 0x87, 0xaa, 0x64, 0xb2, 0xb2, 0x86,
  0x41, 0xed, 0x70, 0x5c, 0xb2, 0xbc, 0x18, 0xf3, 0x79, 0x3c, 0xc8, 0xfd, 0x7c, 0xb2, 0x7a, 0xda,
  0x52, 0x0c, 0xd7, 0x58, 0xb2, 0xb9, 0xc4, 0x45, 0x63, 0x5d, 0x60, 0x40, 0x6f, 0x02, 0x1a, 0xa2,
  0x2e, 0xa4, 0x08, 0x75, 0x29, 0x90, 0xcc, 0x30, 0x6b, 0x37, 0x03, 0x90, 0x46, 0x06, 0xc9, 0x55,
  0xe6, 0x2b, 0xae, 0xb0, 0x3c, 0xbe, 0x02, 0xf9, 0xca, 0xc9, 0x26, 0xc4, 0x65, 0xaf, 0x28, 0xe0,
  0x9e, 0x81, 0x86, 0x4f, 0x10, 0x94, 0xe5, 0x02, 0xac, 0x83, 0x45, 0x8d, 0x26, 0x06, 0x6b, 0x26,
  0xd2, 0x4c, 0x20, 0xd4, 0xa8, 0xd1, 0x0f, 0x60, 0x84, 0x3e, 0x40, 0xb0, 0xc0, 0x85, 0x20, 0x2c,
  0x45, 0x8d, 0x34, 0xc1, 0xfb, 0x98, 0xe2, 0xfb, 0xf6, 0x7c, 0x6e, 0xa5, 0x80, 0x9b, 0xf7, 0x9e,
  0x5c, 0x8b, 0x58, 0x39, 0x86, 0x44, 0x59, 0xf2, 0xfa, 0x28, 0x58, 0x47, 0xf0, 0xbc, 0xc5, 0x40,
  0x59, 0x96, 0xd0, 0x17, 0xdc, 0x4d, 0xfb, 0x70, 0x78, 0x08, 0xc9, 0x76, 0xd2, 0x6f, 0xcf, 0xfb,
  0x11, 0xf5, 0xe9, 0xf3, 0x14, 0xfe, 0xff, 0x1f, 0x16, 0xd2, 0x08, 0xbb, 0xc8, 0x35, 0x0f, 0x55,
  0x7d, 0x07, 0x85, 0xe4, 0x49, 0x3f, 0x69, 0xa8, 0x3a, 0xe8, 0x7c, 0x56, 0x59, 0x65, 0x1d, 0xa5,
  0x15, 0xad, 0x2f, 0x40, 0x24, 0xa6, 0xfd, 0xb4, 0x7b, 0x8a, 0x3e, 0x4d, 0xe1, 0x20, 0x06, 0xd1,
  0xa3, 0x06, 0xcd, 0x34, 0x9a, 0x90, 0xaf, 0x16, 0x37, 0x14, 0xb6, 0xfb, 0x4a, 0x71, 0xef, 0x6f,
  0x4b, 0x1f, 0x72, 0x4a, 0x27, 0xe9, 0x22, 0x4a, 0x2f, 0x46, 0x9b, 0x23, 0x40, 0xe5, 0xf1, 0xd7,
  0xed, 0x1d, 0x6a, 0x3b, 0xc7, 0xcf, 0x11, 0xb1, 0xc4, 0xc5, 0xa6, 0xc6, 0xeb, 0x2e, 0xaf, 0x5a,
  0xcb, 0x9b, 0xa6, 0x90, 0x5a, 0xcf, 0x02, 0x1f, 0x29, 0x2c, 0x88, 0x84, 0xc1, 0x17, 0x3e, 0x70,
  0x17, 0xf2, 0xab, 0xe3, 0xe9, 0x83, 0xbb, 0xf7, 0x1f, 0x9f, 0xc8, 0x2b, 0xef, 0x59, 0x27, 0x0b,
  0x1f, 0xf6, 0x14, 0xfa, 0x1a, 0x31, 0xb0, 0x2f, 0x04, 0xa3, 0xad, 0x98, 0x29, 0xa4, 0x92, 0xc4,
  0xce, 0xb1, 0xef, 0xe0, 0x29, 0x5c, 0xb7, 0xb7, 0xa2, 0x3f, 0xe7, 0x2f, 0x6a, 0xad, 0x5f, 0xe6,
  0x1f, 0xfc, 0x5f, 0xb0, 0xe8, 0x2c, 0x3f, 0xff, 0x8c, 0x5f, 0x3f, 0xa6, 0x79, 0xd6, 0x91, 0x28,
  0xdd, 0xa5, 0xd4, 0x87, 0x23, 0x2b, 0xf6, 0x40, 0xf0, 0xc0, 0x33, 0x3f, 0x47, 0x15, 0x70, 0x2a,
  0x43, 0xb6, 0xa4, 0x66, 0xf1, 0xb8, 0x64, 0x35, 0xd5, 0xcb, 0x75, 0xee, 0x85, 0x9c, 0x43, 0x9b,
  0x5e, 0xc9, 0x84, 0xf4, 0x8d, 0xe2, 0x7b, 0x17, 0x56, 0x7a, 0x6e, 0xb1, 0x9f, 0x4b, 0xb5, 0xd7,
  0x35, 0xa5, 0xf7, 0xee, 0xdd, 0x1a, 0xfd, 0xee, 0xd4, 0xe9, 0x1a, 0x4a, 0x58, 0x5e, 0xf4, 0x46,
  0xdc, 0x93, 0x1a, 0x0c, 0x2e, 0xe0, 0xc9, 0xc3, 0xdb, 0x09, 0xcb, 0xd9, 0xa0, 0x55, 0x55, 0x90,
  0xd6, 0xa4, 0x79, 0xc3, 0x43, 0x1d, 0x3f, 0x9e, 0xdc, 0x2b, 0x59, 0x61, 0x72, 0x6c, 0x00, 0xd9,
  0xf1, 0xb4, 0x33, 0x3c, 0xba, 0xb8, 0xd5, 0x2d, 0xc8, 0xb9, 0x0f, 0x80, 0x5d, 0x97, 0x09, 0xbc,
  0x16, 0x40, 0x35, 0x73, 0x8e, 0xe6, 0x47, 0x6d, 0x34, 0x84, 0x72, 0x1b, 0x31, 0xac, 0x6c, 0xef,
  0x3b, 0xab, 0xa5, 0xc7, 0x9c, 0x2b, 0x95, 0xbc, 0x5a, 0x06, 0x24, 0x75, 0xfc, 0x48, 0x93, 0x5f,
  0x6e, 0x4a, 0x3a, 0xf8, 0xdc, 0xf0, 0x17, 0x3b, 0xb0, 0x4c, 0xe3, 0x4d, 0x1a, 0x3f, 0x33, 0x93,
  0x24, 0xaf, 0xa8, 0x34, 0x03, 0xa0, 0x57, 0x6f, 0x52, 0x28, 0x77, 0xd6, 0xe5, 0xa1, 0xd3, 0xbc,
  0xf5, 0x99, 0xd0, 0xd5, 0x60, 0x95, 0x66, 0x27, 0x5a, 0x2a, 0x42, 0x5c, 0x74, 0xf2, 0xfd, 0x4c,
  0xbf, 0xb4, 0xa6, 0x3e, 0xb5, 0x4d, 0x8e, 0xcd, 0xa5, 0x1f, 0x5d, 0xd1, 0xfd, 0xf0, 0x3e, 0x02,
  0x18, 0x97, 0xd8, 0xd0, 0x01, 0x05, 0x00, 0x00
};

inline void serveNetworkHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", NETWORK_HTML, NETWORK_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// settings.html
const uint16_t SETTINGS_HTML_L = 648;
const uint8_t SETTINGS_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xa5, 0x94, 0xd5, 0x96, 0xdb, 0x3c,
  0x10, 0xc7, 0xaf, 0xb3, 0x4f, 0x31, 0xab, 0x0f, 0x62, 0x9f, 0x13, 0xdb, 0x65, 0x8c, 0xb7, 0xdc,
  0x9b, 0x32, 0x33, 0x28, 0xd6, 0x24, 0x56, 0x23, 0xf0, 0x91, 0x94, 0x64, 0xf1, 0xdd, 0x3b, 0xb2,
  0x03, 0x65, 0xbc, 0x11, 0xcf, 0x6f, 0xe8, 0x6f, 0x0f, 0xb7, 0x85, 0xad, 0xc2, 0x5e, 0x83, 0x50,
  0x07, 0xad, 0x76, 0xb6, 0x86, 0x71, 0x02, 0xc5, 0xcd, 0xa4, 0x64, 0x68, 0xd8, 0xce, 0x56, 0x6f,
  0x58, 0x23, 0x17, 0x34, 0xf7, 0x86, 0x1a, 0x03, 0x87, 0xaa, 0xe6, 0xce, 0x63, 0x28, 0xd9, 0x2c,
  0x8c, 0xb3, 0x73, 0x0c, 0x8a, 0xf6, 0x4a, 0x49, 0x33, 0x05, 0x87, 0xaa, 0x64, 0xb2, 0xb2, 0x86,
  0x41, 0xed, 0x70, 0x5c, 0xb2, 0xbc, 0x18, 0xf3, 0x79, 0x3c, 0xc8, 0xfd, 0x7c, 0xb2, 0x7a, 0xda,
  0x52, 0x0c, 0xd7, 0x58, 0xb2, 0xb9, 0xc4, 0x45, 0x63, 0x5d, 0x60, 0x40, 0x6f, 0x02, 0x1a, 0xa2,
  0x2e, 0xa4, 0x08, 0x75, 0x29, 0x90, 0xcc, 0x30, 0x6b, 0x37, 0x03, 0x90, 0x46, 0x06, 0xc9, 0x55,
  0xe6, 0x2b, 0xae, 0xb0, 0x3c, 0xbe, 0x02, 0xf9, 0xca, 0xc9, 0x26, 0xc4, 0x65, 0xaf, 0x28, 0xe0,
  0x9e, 0x81, 0x86, 0x4f, 0x10, 0x94, 0xe5, 0x02, 0xac, 0x83, 0x45, 0x8d, 0x26, 0x06, 0x6b, 0x26,
  0xd2, 0x4c, 0x20, 0xd4, 0xa8, 0xd1, 0x0f, 0x60, 0x84, 0x3e, 0x40, 0xb0, 0xc0, 0x85, 0x20, 0x2c,
  0x45, 0x8d, 0x34, 0xc1, 0xfb, 0x98, 0xe2, 0xfb, 0xf6, 0x7c, 0x6e, 0xa5, 0x80, 0x9b, 0xf7, 0x9e,
  0x5c, 0x8b, 0x58, 0x39, 0x86, 0x44, 0x59, 0xf2, 0xfa, 0x28, 0x58, 0x47, 0xf0, 0xbc, 0xc5, 0x40,
  0x59, 0x96, 0xd0, 0x17, 0xdc, 0x4d, 0xfb, 0x70, 0x78, 0x08, 0xc9, 0x76, 0xd2, 0x6f, 0xcf, 0xfb,
  0x11, 0xf5, 0xe9, 0xf3, 0x14, 0xfe, 0xff, 0x1f, 0x16, 0xd2, 0x08, 0xbb, 0xc8, 0x35, 0x0f, 0x55,
  0x7d, 0x07, 0x85, 0xe4, 0x49, 0x3f, 0x69, 0xa8, 0x3a, 0xe8, 0x7c, 0x56, 0x59, 0x65, 0x1d, 0xa5,
  0x15, 0xad, 0x2f, 0x40, 0x24, 0xa6, 0xfd, 0xb4, 0x7b, 0x8a, 0x3e, 0x4d, 0xe1, 0x20, 0x06, 0xd1,
  0xa3, 0x06, 0xcd, 0x34, 0x9a, 0x90, 0xaf, 0x16, 0x37, 0x14, 0xb6, 0xfb, 0x4a, 0x71, 0xef, 0x6f,
  0x4b, 0x1f, 0x72, 0x4a, 0x27, 0xe9, 0x22, 0x4a, 0x2f, 0x46, 0x9b, 0x23, 0x40, 0xe5, 0xf1, 0xd7,
  0xed, 0x1d, 0x6a, 0x3b, 0xc7, 0xcf, 0x11, 0xb1, 0xc4, 0xc5, 0xa6, 0xc6, 0xeb, 0x2e, 0xaf, 0x5a,
  0xcb, 0x9b, 0xa6, 0x90, 0x5a, 0xcf, 0x02, 0x1f, 0x29, 0x2c, 0x88, 0x84, 0xc1, 0x17, 0x3e, 0x70,
  0x17, 0xf2, 0xab, 0xe3, 0xe9, 0x83, 0xbb, 0xf7, 0x1f, 0x9f, 0xc8, 0x2b, 0xef, 0x59, 0x27, 0x0b,
  0x1f, 0xf6, 0x14, 0xfa, 0x1a, 0x31, 0xb0, 0x2f, 0x04, 0xa3, 0xad, 0x98, 0x29, 0xa4, 0x92, 0xc4,
  0xce, 0xb1, 0xef, 0xe0, 0x29, 0x5c, 0xb7, 0xb7, 0xa2, 0x3f, 0xe7, 0x2f, 0x6a, 0xad, 0x5f, 0xe6,
  0x1f, 0xfc, 0x5f, 0xb0, 0xe8, 0x2c, 0x3f, 0xff, 0x8c, 0x5f, 0x3f, 0xa6, 0x79, 0xd6, 0x91, 0x28,
  0xdd, 0xa5, 0xd4, 0x87, 0x23, 0x2b, 0xf6, 0x40, 0xf0, 0xc0, 0x33, 0x3f, 0x47, 0x15, 0x70, 0x2a,
  0x43, 0xb6, 0xa4, 0x66, 0xf1, 0xb8, 0x64, 0x35, 0xd5, 0xcb, 0x75, 0xee, 0x85, 0x9c, 0x43, 0x9b,
  0x5e, 0xc9, 0x84, 0xf4, 0x8d, 0xe2, 0x7b, 0x17, 0x56, 0x7a, 0x6e, 0xb1, 0x9f, 0x4b, 0xb5, 0xd7,
  0x35, 0xa5, 0xf7, 0xee, 0xdd, 0x1a, 0xfd, 0xee, 0xd4, 0xe9, 0x1a, 0x4a, 0x58, 0x5e, 0xf4, 0x46,
  0xdc, 0x93, 0x1a, 0x0c, 0x2e, 0xe0, 0xc9, 0xc3, 0xdb, 0x09, 0xcb, 0xd9, 0xa0, 0x55, 0x55, 0x90,
  0xd6, 0xa4, 0x79, 0xc3, 0x43, 0x1d, 0x3f, 0x9e, 0xdc, 0x2b, 0x59, 0x61, 0x72, 0x6c, 0x00, 0xd9,
  0xf1, 0xb4, 0x33, 0x3c, 0xba, 0xb8, 0xd5, 0x2d, 0xc8, 0xb9, 0x0f, 0x80, 0x5d, 0x97, 0x09, 0xbc,
  0x16, 0x40, 0x35, 0x73, 0x8e, 0xe6, 0x47, 0x6d, 0x34, 0x84, 0x72, 0x1b, 0x31, 0xac, 0x6c, 0xef,
  0x3b, 0xab, 0xa5, 0xc7, 0x9c, 0x2b, 0x95, 0xbc, 0x5a, 0x06, 0x24, 0x75, 0xfc, 0x48, 0x93, 0x5f,
  0x6e, 0x4a, 0x3a, 0xf8, 0xdc, 0xf0, 0x17, 0x3b, 0xb0, 0x4c, 0xe3, 0x4d, 0x1a, 0x3f, 0x33, 0x93,
  0x24, 0xaf, 0xa8, 0x34, 0x03, 0xa0, 0x57, 0x6f, 0x52, 0x28, 0x77, 0xd6, 0xe5, 0xa1, 0xd3, 0xbc,
  0xf5, 0x99, 0xd0, 0xd5, 0x60, 0x95, 0x66, 0x27, 0x5a, 0x2a, 0x42, 0x5c, 0x74, 0xf2, 0xfd, 0x4c,
  0xbf, 0xb4, 0xa6, 0x3e, 0xb5, 0x4d, 0x8e, 0xcd, 0xa5, 0x1f, 0x5d, 0xd1, 0xfd, 0xf0, 0x3e, 0x02,
  0x18, 0x97, 0xd8, 0xd0, 0x01, 0x05, 0x00, 0x00
};

inline void serveSettingsHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", SETTINGS_HTML, SETTINGS_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

